(function() {var type_impls = {
"absurd":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayMap%3CK,+V,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#176-182\">source</a><a href=\"#impl-ArrayMap%3CK,+V,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"absurd/struct.ArrayMap.html\" title=\"struct absurd::ArrayMap\">ArrayMap</a>&lt;K, V, N&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#177-181\">source</a><h4 class=\"code-header\">pub fn <a href=\"absurd/struct.ArrayMap.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></div></details>",0,"absurd::collections::ArraySet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Set%3CT%3E-for-ArrayMap%3CT,+(),+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#259-282\">source</a><a href=\"#impl-Set%3CT%3E-for-ArrayMap%3CT,+(),+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"absurd/trait.Set.html\" title=\"trait absurd::Set\">Set</a>&lt;T&gt; for <a class=\"struct\" href=\"absurd/struct.ArrayMap.html\" title=\"struct absurd::ArrayMap\">ArrayMap</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, N&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.contains\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#260-262\">source</a><a href=\"#method.contains\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Set.html#tymethod.contains\" class=\"fn\">contains</a>(&amp;self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#264-271\">source</a><a href=\"#method.insert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Set.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, item: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the item is newly inserted (i.e. true means the item was not present).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#273-281\">source</a><a href=\"#method.remove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Set.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the item is removed (i.e. true means the item was present).</div></details></div></details>","Set<T>","absurd::collections::ArraySet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-ArrayMap%3CK,+V,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#184-188\">source</a><a href=\"#impl-Default-for-ArrayMap%3CK,+V,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"absurd/struct.ArrayMap.html\" title=\"struct absurd::ArrayMap\">ArrayMap</a>&lt;K, V, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#185-187\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","absurd::collections::ArraySet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ArrayMap%3CK,+V,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#171\">source</a><a href=\"#impl-Debug-for-ArrayMap%3CK,+V,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"absurd/struct.ArrayMap.html\" title=\"struct absurd::ArrayMap\">ArrayMap</a>&lt;K, V, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#171\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","absurd::collections::ArraySet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Map%3CK,+V%3E-for-ArrayMap%3CK,+V,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#190-211\">source</a><a href=\"#impl-Map%3CK,+V%3E-for-ArrayMap%3CK,+V,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"absurd/trait.Map.html\" title=\"trait absurd::Map\">Map</a>&lt;K, V&gt; for <a class=\"struct\" href=\"absurd/struct.ArrayMap.html\" title=\"struct absurd::ArrayMap\">ArrayMap</a>&lt;K, V, N&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#191-193\">source</a><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Map.html#tymethod.get\" class=\"fn\">get</a>(&amp;self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>&gt;</h4></section><section id=\"method.get_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#195-197\">source</a><a href=\"#method.get_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Map.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>&gt;</h4></section><section id=\"method.insert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#199-205\">source</a><a href=\"#method.insert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Map.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, item: K, value: V)</h4></section><section id=\"method.remove_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#207-210\">source</a><a href=\"#method.remove_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Map.html#tymethod.remove_entry\" class=\"fn\">remove_entry</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt;</h4></section><section id=\"method.contains_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#9-11\">source</a><a href=\"#method.contains_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Map.html#method.contains_key\" class=\"fn\">contains_key</a>(&amp;self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.remove\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/absurd/collections.rs.html#12-14\">source</a><a href=\"#method.remove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"absurd/trait.Map.html#method.remove\" class=\"fn\">remove</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;</h4></section></div></details>","Map<K, V>","absurd::collections::ArraySet"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()